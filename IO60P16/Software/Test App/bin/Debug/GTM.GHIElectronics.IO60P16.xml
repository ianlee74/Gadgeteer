<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GTM.GHIElectronics.IO60P16</name>
    </assembly>
    <members>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.#ctor(Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module,Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Constructor.
            </summary>
            <param name="parentModule">The module to which this port belongs.</param>
            <param name="pin">The pin ID that this port represents.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.#ctor(Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module,Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentModule">The module to which this port belongs.</param>
            <param name="pin">The pin ID that this port represents.</param>
            <param name="resistorMode">The resistor mode to assign to the pin.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.EnableInterrupt">
            <summary>
            Enables interrupts for this port.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.OnParentInterrupt(System.Object,Gadgeteer.Modules.GHIElectronics.IO60P16.InterruptEventArgs)">
            <summary>
            Handles interrupts raised by the module and throws a new event if the interrupt was for this pin.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.DisableInterrupt">
            <summary>
            Disable interrupts for this port.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.Read">
            <summary>
            Read the current value of the port.
            </summary>
            <returns>State value of the port.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.Dispose">
            <summary>
            Dispose of the port.
            </summary>
        </member>
        <member name="E:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.OnInterrupt">
            <summary>
            Event that is raised when an interrupt is triggered.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.ParentModule">
            <summary>
            The module to which this pin belongs.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.Id">
            <summary>
            The pin ID that this port represents.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.PortNumber">
            <summary>
            The [module silk screened] port number.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.PinNumber">
            <summary>
            The [module silk screened] pin number.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.Port.Resistor">
            <summary>
            Gets or sets the resistor mode of the input port. You set the initial resistor mode value in the constructor.
            </summary>
        </member>
        <member name="T:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module">
            <summary>
            A IO60P16 module for Microsoft .NET Gadgeteer
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.DEV_ADDR">
            <summary>
            Address of the device.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.#ctor(System.Int32)">
            <summary></summary>
            <param name="socketNumber">The socket that this module is plugged in to.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.OnInterrupt(Gadgeteer.Interfaces.InterruptInput,System.Boolean)">
            <summary>
            Executes anytime the interrupt pin goes high.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Reset">
            <summary>
            Sends a power-on reset to the module.  The equivalent of unplugging the power
            and plugging it back in.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.RestoreFactoryDefaults">
            <summary>
            Restores the module configuration to factory defaults.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SaveConfiguration">
            <summary>
            Saves the current configuration as the default initial settings 
            after a power on reset.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.WriteRegister(System.Byte,System.Byte)">
            <summary>
            Writes a value to a register.
            </summary>
            <param name="register">The register to write to.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.ReadRegister(System.Byte)">
            <summary>
            Reads a value from a register.
            </summary>
            <param name="register">The register to read from.</param>
            <returns>The value in the register.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Read(System.Byte)">
            <summary>
            Reads the value of a port.
            </summary>
            <param name="port">The port to read.</param>
            <returns>The value of the port.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Read(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Reads the value of a pin.
            </summary>
            <param name="pin">The pin to read.</param>
            <returns>High (true) or low (false) state of the pin.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Write(System.Byte,System.Byte)">
            <summary>
            Writes a value to the specified port.
            </summary>
            <param name="port">Port to write to.</param>
            <param name="value">Value to write to the port.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Write(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,System.Boolean)">
            <summary>
            Writes a value to the specified pin.
            </summary>
            <param name="pin">Pin to write to.</param>
            <param name="state">State value to write to the pin.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Write(System.Byte,System.Byte,System.Boolean)">
            <summary>
            Write a value to a single pin of the specified port.
            </summary>
            <param name="port">Port to write to.</param>
            <param name="pin">Pin to write to.</param>
            <param name="state">Value to write to the pin.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.Write(Gadgeteer.Modules.GHIElectronics.IO60P16.OutputPort[],System.Boolean[])">
            <summary>
            Write to an array of pins simultaneously.
            </summary>
            <param name="pins">An array of OutputPort objects.</param>
            <param name="state">Array of state values for each pin.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.CreatePwm(Gadgeteer.Modules.GHIElectronics.IO60P16.PwmPin,System.UInt32,System.UInt32,Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.ScaleFactor,System.Boolean)">
            <summary>
            Creates a PWM object.
            </summary>
            <param name="pin">The PWM pin.</param>
            <param name="period">The period length.</param>
            <param name="pulseWidth">The pulse width.</param>
            <returns>A PWM object.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.CreateOutputPort(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,System.Boolean)">
            <summary>
            Creates an OutputPort object.
            </summary>
            <param name="pin">The pin to make an output port.</param>
            <param name="initialState">The initial state of the pin.</param>
            <returns>An OutputPort object.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.CreateInputPort(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Creates an InputPort object.
            </summary>
            <param name="pin">The pin to make an input port.</param>
            <returns>An InputPort object.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.CreateInterruptPort(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Creates an InterruptPort object.
            </summary>
            <param name="pin">The pin to make an interrupt port.</param>
            <returns>An InterruptPort object.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetResistorMode(System.Byte,Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode,System.Byte)">
            <summary>
            Sets all the pins on a port to the same resistor mode.
            </summary>
            <param name="port">The port number to set.</param>
            <param name="resistorMode">The resistor mode assign to the port.</param>
            <param name="pinMask">The pins to assign to the specified resistor mode. </param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetResistorMode(System.Byte,System.Byte,Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode)">
            <summary>
            Sets all the pins on a port to the same resistor mode.
            </summary>
            <param name="port">The port number to set.</param>
            <param name="pin">The pin to set.</param>
            <param name="resistorMode">The resistor mode assign to the port.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetResistorMode(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode)">
            <summary>
            Sets the resistor mode on a pin.
            </summary>
            <param name="pin">The pin.</param>
            <param name="resistorMode">The resistor mode to assign to the pin.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.GetResistorMode(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Gets the current resistor/drive mode of a pin.
            </summary>
            <param name="pin">The pin to inspect.</param>
            <returns>ResistorMode value.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetDirection(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,Gadgeteer.Modules.GHIElectronics.IO60P16.PinDirection)">
            <summary>
            Sets the direction of a single pin.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.GetPortNumber(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Gets the port number from a given pin ID.
            </summary>
            <param name="pinId">An IOPin.</param>
            <returns>Port number of the given pin.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.GetPinNumber(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Gets the pin number from a given pin ID.
            </summary>
            <param name="pin">An IOPin.</param>
            <returns>Pin number of the given pin.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetDirection(System.Byte,System.Byte)">
            <summary>
            Sets the IO direction for all pins on a port at once.
            </summary>
            <param name="port">The port number to update.</param>
            <param name="direction">Directions of each pin on the port.  Each bit represents a pin.  0 = output, 1 = input.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.GetInterruptsEnabled(System.Byte)">
            <summary>
            Gets a mask of the pins on a port that have interrupts enabled.
            </summary>
            <param name="port">The port to inspect.</param>
            <returns>Pin mask indicating those that have interrupts enabled.</returns>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetInterruptEnable(System.Byte,System.Byte)">
            <summary>
            Enables interrupts for all pins on a port according to a mask.
            </summary>
            <param name="port">The port to update.</param>
            <param name="enableMask">Mask that specifies the port enable setting for each pin.  1 = enabled, 0 = disabled.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.SetInterruptEnable(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,System.Boolean)">
            <summary>
            Enable interrupts for a pin.
            </summary>
            <param name="pin">The pin to enable interrupts on.</param>
            <param name="enable">Enable (true) or disable (false)?</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.EnableInputLogicInversion(System.Byte,System.Byte)">
            <summary>
            Inverts the input logic of an input port.
            </summary>
            <param name="port">The port to update.</param>
            <param name="enableMask">Mask specifying the pins to enable inversion.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module.EnableInputLogicInversion(Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,System.Boolean)">
            <summary>
            Inverts the input logic of an input pin.
            </summary>
            <param name="pin">The pin to update.</param>
            <param name="enable">Enable (true) or disable (false) inversion of the logic input.</param>
        </member>
        <member name="T:Gadgeteer.Modules.GHIElectronics.IO60P16.InterruptEventArgs">
            <summary>
            Event arguments that are passed during an Interrupt event.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.InterruptEventArgs.Port">
            <summary>
            The port where the interrupt occurred.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.InterruptEventArgs.Pin">
            <summary>
            The pin that triggered the event.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.InterruptEventArgs.Timestamp">
            <summary>
            The date/time that the interrupt occurred.
            </summary>
        </member>
        <member name="T:Gadgeteer.Modules.GHIElectronics.IO60P16.PinDirection">
            <summary>
            Identifies a pin's IO direction.
            </summary>
        </member>
        <member name="T:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode">
            <summary>
            IO pin drive modes.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.ResistivePullUp">
            <summary>
            This mode is the opposite of the Pull-down mode. In this mode, HIGH output is driven strong and LOW output 
            is through an internal pull-down resistor of approximately 5.6K. 
            This mode may be used as an input, for example with a switch connected to GND. 
            Once the pull-up resistor is enabled, the state of the pin is read using the input register. 
            This mode may also be used as output.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.ResistivePullDown">
            <summary>
            In this mode, HIGH output is driven strong, and LOW output is through an internal pull-down resistor of approximately 5.6K. 
            This mode may be used as an input, for example with a switch connected to 3.3V. This mode may also be used as output.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.OpenDrainHigh">
            <summary>
            In this mode, the HIGH output is driven with a slow strong drive. The LOW output is high impedence.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.OpenDrainLow">
            <summary>
            In this mode, the LOW output is driven with a slow strong drive and HIGH output is high impedence.
            This mode is suitable for I2C bus where external pull-up resistors are used.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.StrongDrive">
            <summary>
            Strong High, Strong Low, FastOutput Mode.
            Use the Strong mode if your pin is an output driving a load. 
            The pin has a low impedance connection to GND and 3.3V when driven high and low. 
            Do not use the Strong mode if the pin is an input.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.SlowStrongDrive">
            <summary>
            Strong High, Strong Low, Slow Output Mode.
            This mode is similar to the Strong mode, but the slope of the output is slightly controlled 
            so that high harmonics are not present when the output switches.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.ResistorMode.HighImpedence">
            <summary>
            High Z mode.
            This mode is normally used when the pin will be driven high and low externally of the module.
            </summary>
        </member>
        <member name="T:Gadgeteer.Modules.GHIElectronics.IO60P16.InputPort">
            <summary>
            Represents an instance of an input port that can be used to read the value of a GPIO pin.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.InputPort.#ctor(Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module,Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin)">
            <summary>
            Constructor
            </summary>
            <param name="parentModule">The instance of the parent IO60P16 module to which this pin is contained.</param>
            <param name="pin">The pin being setup for input.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.InterruptPort.ClearInterrupt">
            <summary>
            Clears the current interrupt on the interrupt port.
            Warning: This clears the interrupt of all pins on the same IO60P16 port.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.Period">
            <summary>
            The period length of the PWM signal.  Units are determined by Scale property.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.Duration">
            <summary>
            The pulse width duration.  Units are determined by Scale property.
            </summary>
        </member>
        <member name="P:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.Scale">
            <summary>
            The scale 
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.PwmClockSource.Clock_32kHz">
            <summary>
            32 kHz clock source.  Has a maximum period of 7.97 ms.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.PwmClockSource.Clock_24MHz">
            <summary>
            24 MHz clock.  Has a maximum period of 11 ns.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.PwmClockSource.Clock_1Mhz5">
            <summary>
            1.5 MHz clock.  Has a maximum period of 170 ns.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.PwmClockSource.Clock_93kHz75">
            <summary>
            93.75 kHz clock.  Has a maximum period of 2.72 ms.
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.PwmClockSource.Clock_367Hz6">
            <summary>
            367.6 Hz clock.  Has a maximum period of 693 ms.  This is a user programmable clock.
            It is the 93.75 kHz clock used in combination with a divider value between 0-255.
            255 is the default divider values (e.g. 93750/255 = 367.6)
            </summary>
        </member>
        <member name="F:Gadgeteer.Modules.GHIElectronics.IO60P16.PWM.PwmClockSource.PreviousPwm">
            <summary>
            Use the clock that was previously set.
            </summary>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.OutputPort.#ctor(Gadgeteer.Modules.GHIElectronics.IO60P16.IO60P16Module,Gadgeteer.Modules.GHIElectronics.IO60P16.IOPin,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="parentModule">The module to which this pin belongs.</param>
            <param name="pin">The pin ID that this object represents.</param>
            <param name="initialState">The initial state of the port.</param>
        </member>
        <member name="M:Gadgeteer.Modules.GHIElectronics.IO60P16.OutputPort.Write(System.Boolean)">
            <summary>
            Set the state value of the pin.
            </summary>
            <param name="state">High (true) or low (false).</param>
        </member>
    </members>
</doc>
